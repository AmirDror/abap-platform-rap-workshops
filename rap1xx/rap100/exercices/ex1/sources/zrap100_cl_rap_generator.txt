CLASS zrap100_cl_rap_generator DEFINITION
  PUBLIC
  INHERITING FROM cl_xco_cp_adt_simple_classrun
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

  PROTECTED SECTION.
    METHODS main REDEFINITION.
    METHODS get_json_string
      RETURNING VALUE(json_string) TYPE string.
  PRIVATE SECTION.
    DATA package_name TYPE string.
    DATA group_number TYPE string.

    CONSTANTS session_id TYPE string VALUE 'RAP100'.
    CONSTANTS dash_string TYPE string VALUE '-'.

ENDCLASS.



CLASS zrap100_cl_rap_generator IMPLEMENTATION.


  METHOD main.


    DATA(cb_user_name) = sy-uname.
    DATA(business_partner_number) = substring( val = cb_user_name off = strlen( 'CB' ) ).


    SELECT SINGLE * FROM I_BusinessUserBasic WITH PRIVILEGED ACCESS WHERE BusinessPartner = @business_partner_number INTO @DATA(business_partner_data).

    out->write( |Welcome '{ business_partner_data-firstname }'| ).

    DATA(session_id_from_package) = substring( val = business_partner_data-firstname len = strlen( business_partner_data-firstname ) - 4 ).
    DATA(dash_string_from_package) = substring( val = business_partner_data-firstname off = strlen( business_partner_data-firstname ) - 3 len = 1 ).

    IF session_id_from_package <> session_id OR dash_string <> dash_string_from_package.
      out->write( |first name of you use does not have the format { session_id }-###| ).
    ENDIF.

    group_number = substring( val = business_partner_data-firstname off = strlen( business_partner_data-firstname ) - 3 ).
    package_name =  'Z' && session_id && '_' && group_number .

*    out->write( |cb username{ cb_user_name }| ).
*    out->write( |businessp  { business_partner_number }| ).
*    out->write( |session id:{ session_id }, Package:{ package_name }, Group Number: { group_number }, dash string:{ dash_string }| ).
*    out->write( |Session id from package:{ session_id_from_package }| ).
*    out->write( |dash string from package:{ dash_string_from_package }| ).

    out->write( |Your group number is: '{ group_number }'| ).
    out->write( |Looking for package: { package_name }| ).

    TRY.
        DATA(json_string) = get_json_string(  ).
        DATA(rap_generator) = ZDMO_cl_rap_generator=>create_for_cloud_development( json_string ).
        "DATA(rap_generator) = ZDMO_cl_rap_generator=>create_for_on_prem_development( json_string ).
        DATA(framework_messages) = rap_generator->generate_bo( ).
        IF rap_generator->exception_occured( ).
          out->write( |Caution: Exception occured | ) .
          out->write( |Check repository objects of RAP BO { rap_generator->get_rap_bo_name(  ) }.| ) .
        ELSE.
          out->write( |RAP BO { rap_generator->get_rap_bo_name(  ) }  generated successfully| ) .
        ENDIF.
*        out->write( |Messages from framework:| ) .
*        LOOP AT framework_messages INTO DATA(framework_message).
*          out->write( framework_message ).
*        ENDLOOP.
      CATCH ZDMO_cx_rap_generator INTO DATA(rap_generator_exception).
        out->write( 'RAP Generator has raised the following exception:' ) .
        out->write( rap_generator_exception->get_text(  ) ).
    ENDTRY.
  ENDMETHOD.


  METHOD get_json_string.
    json_string = '{' && |\r\n|  &&
                  '"namespace":"Z",' && |\r\n|  &&
                  |"package":"{ package_name }",| && |\r\n|  &&
                  '"dataSourceType":"table",' && |\r\n|  &&
                  '"bindingType":"odata_v4_ui",' && |\r\n|  &&
                  '"implementationType":"managed_semantic",' && |\r\n|  &&
                  '"prefix":"",' && |\r\n|  &&
                  |"suffix":"_{ group_number }",| && |\r\n|  &&
                  '"draftEnabled":true,' && |\r\n|  &&
                  '"multiInlineEdit":false,' && |\r\n|  &&
                  '"isCustomizingTable":false,' && |\r\n|  &&
                  '"addBusinessConfigurationRegistration":false,' && |\r\n|  &&
                  '"mimicadtwizard":true,' && |\r\n|  &&
*                  '"transportRequest":"D22K900008",' && |\r\n|  &&
                  '"hierarchy":' && |\r\n|  &&
                  '{' && |\r\n|  &&
                  ' "entityname":"Travel",' && |\r\n|  &&
                  | "dataSource":"ZRAP100_ATRAV{ group_number }",| && |\r\n|  &&
                  ' "objectid":"TRAVEL_ID",' && |\r\n|  &&
                  ' "uuid":"",' && |\r\n|  &&
                  ' "parentUUID":"",' && |\r\n|  &&
                  ' "rootUUID":"",' && |\r\n|  &&
                  ' "etagMaster":"LAST_CHANGED_AT",' && |\r\n|  &&
                  ' "totalEtag":"LOCAL_LAST_CHANGED_AT",' && |\r\n|  &&
                  ' "lastChangedAt":"LOCAL_LAST_CHANGED_AT",' && |\r\n|  &&
                  ' "lastChangedBy":"",' && |\r\n|  &&
                  ' "localInstanceLastChangedAt":"LAST_CHANGED_AT",' && |\r\n|  &&
                  ' "createdAt":"CREATED_AT",' && |\r\n|  &&
                  ' "createdBy":"CREATED_BY",' && |\r\n|  &&
                  | "draftTable":"ZRAP100_DTRAV{ group_number  }",| && |\r\n|  &&
                  | "cdsInterfaceView":"ZRAP100_I_TravelTP_{ group_number }",| && |\r\n|  &&
                  | "cdsRestrictedReuseView":"ZRAP100_R_TravelTP_{ group_number }",| && |\r\n|  &&
                  | "cdsProjectionView":"ZRAP100_C_TravelTP_{ group_number }",| && |\r\n|  &&
                  | "metadataExtensionView":"ZRAP100_C_Travel_{ group_number }",| && |\r\n|  &&
                  | "behaviorImplementationClass":"ZRAP100_BP_TravelTP_{ group_number }",| && |\r\n|  &&

                  | "serviceDefinition":"ZRAP100_UI_Travel_{ group_number }",| && |\r\n|  &&
                  | "serviceBinding":"ZRAP100_UI_Travel_O4_{ group_number }",| && |\r\n|  &&
                  ' "controlStructure":"",' && |\r\n|  &&
                  ' "customQueryImplementationClass":""' && |\r\n|  &&
                  '}' && |\r\n|  &&
                  '}' .
  ENDMETHOD.
ENDCLASS.
